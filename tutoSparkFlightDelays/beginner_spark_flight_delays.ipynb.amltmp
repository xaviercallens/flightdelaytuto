{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## PREDICTING FLIGHT DELAYS AT ARRIVAL"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Powered by the <span style=\"color:rgb(0,94,184)\">Data Science Platform*</span> <img src=\"images/logo-dsp-100x100.png\" style=\"vertical-align:middle\" width=\"25\" height=\"25\" />"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "Level: <span style=\"color:green\">Beginner</span>"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "Duration: *25 min*"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Introduction"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "The goal of this notebook is to to build, train and evaluate a Random Forest model in order to predict the flight delays at arrival of Southwest airline company (WN) at the Los Angeles international airport (LAX) in 2015. The purpose is not to obtain the best possible prediction but rather to emphasize on the various steps needed to build such a model.\n",
        "\n",
        "This notebook will cover the features of the Data science platform below:\n",
        "* PySpark notebook\n",
        "* Data access in MaprFS Raw Data Archive using spark\n",
        "* Data preparation using SQL and spark-sql\n",
        "* Data visualization\n",
        "* Build a Random Forest model using spark-ml\n",
        "* Train this random forest model using spark-ml\n",
        "* Evaluate the model using spark-ml"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "<img src=\"images/global_free_trial_spark_delay.png\" width=\"700\" height=\"350\" />"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1. Data analysis"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.1 Import dependencies"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "%pip install azure-ai-ml\n",
        "import datetime, warnings, scipy \n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.patches as patches\n",
        "from matplotlib.patches import ConnectionPatch\n",
        "from collections import OrderedDict\n",
        "from matplotlib.gridspec import GridSpec\n",
        "\n",
        "import pyspark.sql.functions as F\n",
        "from pyspark.sql.types import *\n",
        "from pyspark.sql import functions as F\n",
        "from pyspark.context import SparkContext\n",
        "from pyspark.sql.session import SparkSession\n",
        "\n",
        "sc = SparkContext('local')\n",
        "spark = SparkSession(sc)\n",
        "\n",
        "plt.rcParams[\"patch.force_edgecolor\"] = True\n",
        "plt.style.use('fivethirtyeight')\n",
        "mpl.rc('patch', edgecolor = 'dimgray', linewidth=1)\n",
        "from IPython.core.interactiveshell import InteractiveShell\n",
        "InteractiveShell.ast_node_interactivity = \"last_expr\"\n",
        "pd.options.display.max_columns = 50\n",
        "%matplotlib inline\n",
        "warnings.filterwarnings(\"ignore\")"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Requirement already satisfied: azure-ai-ml in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (1.1.1)\nRequirement already satisfied: azure-mgmt-core<2.0.0,>=1.3.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (1.3.2)\nRequirement already satisfied: strictyaml<2.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (1.6.2)\nRequirement already satisfied: typing-extensions<5.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (4.4.0)\nRequirement already satisfied: opencensus-ext-azure<2.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (1.1.7)\nRequirement already satisfied: pydash<6.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (5.1.1)\nRequirement already satisfied: azure-core!=1.22.0,<2.0.0,>=1.8.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (1.26.0)\nRequirement already satisfied: msrest>=0.6.18 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (0.7.1)\nRequirement already satisfied: azure-storage-file-datalake<13.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (12.9.1)\nRequirement already satisfied: isodate in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (0.6.1)\nRequirement already satisfied: azure-common<2.0.0,>=1.1 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (1.1.28)\nRequirement already satisfied: pyjwt<3.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (2.4.0)\nRequirement already satisfied: azure-storage-blob<13.0.0,>=12.10.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (12.13.0)\nRequirement already satisfied: tqdm<5.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (4.64.1)\nRequirement already satisfied: azure-storage-file-share<13.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (12.10.1)\nRequirement already satisfied: marshmallow<4.0.0,>=3.5 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (3.19.0)\nRequirement already satisfied: jsonschema<5.0.0,>=4.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (4.16.0)\nRequirement already satisfied: colorama<0.5.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (0.4.6)\nRequirement already satisfied: pyyaml<7.0.0,>=5.1.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-ai-ml) (6.0)\nRequirement already satisfied: python-dateutil>=2.6.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from strictyaml<2.0.0->azure-ai-ml) (2.8.2)\nRequirement already satisfied: azure-identity<2.0.0,>=1.5.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus-ext-azure<2.0.0->azure-ai-ml) (1.7.0)\nRequirement already satisfied: requests>=2.19.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus-ext-azure<2.0.0->azure-ai-ml) (2.28.1)\nRequirement already satisfied: psutil>=5.6.3 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus-ext-azure<2.0.0->azure-ai-ml) (5.9.3)\nRequirement already satisfied: opencensus<1.0.0,>=0.11.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus-ext-azure<2.0.0->azure-ai-ml) (0.11.0)\nRequirement already satisfied: six>=1.11.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-core!=1.22.0,<2.0.0,>=1.8.0->azure-ai-ml) (1.16.0)\nRequirement already satisfied: certifi>=2017.4.17 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from msrest>=0.6.18->azure-ai-ml) (2022.9.24)\nRequirement already satisfied: requests-oauthlib>=0.5.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from msrest>=0.6.18->azure-ai-ml) (1.3.1)\nRequirement already satisfied: cryptography>=2.1.4 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-storage-blob<13.0.0,>=12.10.0->azure-ai-ml) (38.0.1)\nRequirement already satisfied: packaging>=17.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from marshmallow<4.0.0,>=3.5->azure-ai-ml) (21.3)\nRequirement already satisfied: pkgutil-resolve-name>=1.3.10; python_version < \"3.9\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from jsonschema<5.0.0,>=4.0.0->azure-ai-ml) (1.3.10)\nRequirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from jsonschema<5.0.0,>=4.0.0->azure-ai-ml) (0.18.1)\nRequirement already satisfied: importlib-resources>=1.4.0; python_version < \"3.9\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from jsonschema<5.0.0,>=4.0.0->azure-ai-ml) (5.10.0)\nRequirement already satisfied: attrs>=17.4.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from jsonschema<5.0.0,>=4.0.0->azure-ai-ml) (22.1.0)\nRequirement already satisfied: msal-extensions~=0.3.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-identity<2.0.0,>=1.5.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (0.3.1)\nRequirement already satisfied: msal<2.0.0,>=1.12.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from azure-identity<2.0.0,>=1.5.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (1.20.0)\nRequirement already satisfied: charset-normalizer<3,>=2 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from requests>=2.19.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (2.1.1)\nRequirement already satisfied: idna<4,>=2.5 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from requests>=2.19.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (3.4)\nRequirement already satisfied: urllib3<1.27,>=1.21.1 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from requests>=2.19.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (1.26.12)\nRequirement already satisfied: google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (2.10.2)\nRequirement already satisfied: opencensus-context>=0.1.3 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (0.1.3)\nRequirement already satisfied: oauthlib>=3.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from requests-oauthlib>=0.5.0->msrest>=0.6.18->azure-ai-ml) (3.2.2)\nRequirement already satisfied: cffi>=1.12 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from cryptography>=2.1.4->azure-storage-blob<13.0.0,>=12.10.0->azure-ai-ml) (1.15.1)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from packaging>=17.0->marshmallow<4.0.0,>=3.5->azure-ai-ml) (3.0.9)\nRequirement already satisfied: zipp>=3.1.0; python_version < \"3.10\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from importlib-resources>=1.4.0; python_version < \"3.9\"->jsonschema<5.0.0,>=4.0.0->azure-ai-ml) (3.9.0)\nRequirement already satisfied: portalocker<3,>=1.0; python_version >= \"3.5\" and platform_system != \"Windows\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from msal-extensions~=0.3.0->azure-identity<2.0.0,>=1.5.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (2.6.0)\nRequirement already satisfied: googleapis-common-protos<2.0dev,>=1.56.2 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (1.56.4)\nRequirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.19.5 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (4.21.9)\nRequirement already satisfied: google-auth<3.0dev,>=1.25.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (2.13.0)\nRequirement already satisfied: pycparser in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from cffi>=1.12->cryptography>=2.1.4->azure-storage-blob<13.0.0,>=12.10.0->azure-ai-ml) (2.21)\nRequirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3.6\" in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-auth<3.0dev,>=1.25.0->google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (4.9)\nRequirement already satisfied: cachetools<6.0,>=2.0.0 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-auth<3.0dev,>=1.25.0->google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (5.2.0)\nRequirement already satisfied: pyasn1-modules>=0.2.1 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from google-auth<3.0dev,>=1.25.0->google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (0.2.8)\nRequirement already satisfied: pyasn1>=0.1.3 in /anaconda/envs/azureml_py38/lib/python3.8/site-packages (from rsa<5,>=3.1.4; python_version >= \"3.6\"->google-auth<3.0dev,>=1.25.0->google-api-core<3.0.0,>=1.0.0; python_version >= \"3.6\"->opencensus<1.0.0,>=0.11.0->opencensus-ext-azure<2.0.0->azure-ai-ml) (0.4.8)\nNote: you may need to restart the kernel to use updated packages.\n"
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/anaconda/envs/azureml_py38/lib/python3.8/site-packages/pyspark/jars/spark-unsafe_2.12-3.2.2.jar) to constructor java.nio.DirectByteBuffer(long,int)\nWARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n"
        }
      ],
      "execution_count": 1,
      "metadata": {
        "gather": {
          "logged": 1669396097675
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.1 Read flights csv from MaprFS as a spark DataFrame (1 min)"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "We read the file that contains the details of all the flights that occured in 2015 by US carriers from the Raw Data Archive and we let spark infer the schema. To do so, we download in local a public blob storage account, then we read flights.csv with spark"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "# azureml-core of version 1.0.72 or higher is required\n",
        "import os\n",
        "from azure.storage.blob import BlobServiceClient\n",
        "\n",
        "# Check if the file is already downloaded\n",
        "if os.path.isfile('flights.csv'):\n",
        "    print('File already downloaded')\n",
        "else:\n",
        "    account_url = \"https://publicdataflights.blob.core.windows.net/\"\n",
        "\n",
        "    blob_service_client = BlobServiceClient(account_url=account_url)\n",
        "\n",
        "\n",
        "    # download all blob into local files\n",
        "    container_name = 'dataflights'\n",
        "    container_client = blob_service_client.get_container_client(container_name)\n",
        "    blob_list = container_client.list_blobs()\n",
        "    for blob in blob_list:\n",
        "        print(blob.name)\n",
        "        blob_client = blob_service_client.get_blob_client(container_name, blob=blob.name)\n",
        "        with open(blob.name, \"wb\") as my_blob:\n",
        "            blob_data = blob_client.download_blob()\n",
        "            blob_data.readinto(my_blob)\n",
        "        print(\"\\tBlob '{}' downloaded\".format(blob.name))\n",
        "\n",
        "flights = spark.read.option(\"inferschema\", \"true\").csv('flights.csv', header=True)\n",
        "\n",
        "#azureml://subscriptions/8b5374c5-8b98-45fb-bd96-7d5a4ce4e527/resourcegroups/rg-sbx-aiops/workspaces/romain-mlbox/datastores/workspaceblobstore/paths/UI/2022-11-18_181749_UTC/flights.csv"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "airline_codes.csv\n\tBlob 'airline_codes.csv' downloaded\nairlines.csv\n\tBlob 'airlines.csv' downloaded\nairports.csv\n\tBlob 'airports.csv' downloaded\nflights.csv\n\tBlob 'flights.csv' downloaded\n"
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        }
      ],
      "execution_count": 2,
      "metadata": {
        "gather": {
          "logged": 1669396142264
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.2 Inspect the DataFrame dimensions"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "We first verify that the csv file has been loaded correctly by checking the dimensions:\n",
        "* 5,819,079 rows\n",
        "* 31 columns\n"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "nb_rows = flights.count()\n",
        "nb_columns = len(flights.columns)\n",
        "print(\"Dataframe dimentions:\", (nb_rows, nb_columns))"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "[Stage 2:===============================================>           (4 + 1) / 5]\r"
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Dataframe dimentions: (5819079, 31)\n"
        }
      ],
      "execution_count": 3,
      "metadata": {
        "gather": {
          "logged": 1669396187142
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.3 Inspect columns types"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "Then, we first verify that the column type has been inferred correctly"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "tab_info=pd.DataFrame(flights.dtypes).T.rename(index={0:'column type'})\n",
        "tab_info"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 4,
          "data": {
            "text/plain": "               0      1    2            3        4              5   \\\ncolumn type  YEAR  MONTH  DAY  DAY_OF_WEEK  AIRLINE  FLIGHT_NUMBER   \n1             int    int  int          int   string            int   \n\n                      6               7                    8   \\\ncolumn type  TAIL_NUMBER  ORIGIN_AIRPORT  DESTINATION_AIRPORT   \n1                 string          string               string   \n\n                              9               10               11        12  \\\ncolumn type  SCHEDULED_DEPARTURE  DEPARTURE_TIME  DEPARTURE_DELAY  TAXI_OUT   \n1                            int             int              int       int   \n\n                     13              14            15        16        17  \\\ncolumn type  WHEELS_OFF  SCHEDULED_TIME  ELAPSED_TIME  AIR_TIME  DISTANCE   \n1                   int             int           int       int       int   \n\n                    18       19                 20            21  \\\ncolumn type  WHEELS_ON  TAXI_IN  SCHEDULED_ARRIVAL  ARRIVAL_TIME   \n1                  int      int                int           int   \n\n                        22        23         24                   25  \\\ncolumn type  ARRIVAL_DELAY  DIVERTED  CANCELLED  CANCELLATION_REASON   \n1                      int       int        int               string   \n\n                           26              27             28  \\\ncolumn type  AIR_SYSTEM_DELAY  SECURITY_DELAY  AIRLINE_DELAY   \n1                         int             int            int   \n\n                              29             30  \ncolumn type  LATE_AIRCRAFT_DELAY  WEATHER_DELAY  \n1                            int            int  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>10</th>\n      <th>11</th>\n      <th>12</th>\n      <th>13</th>\n      <th>14</th>\n      <th>15</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n      <th>30</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>column type</th>\n      <td>YEAR</td>\n      <td>MONTH</td>\n      <td>DAY</td>\n      <td>DAY_OF_WEEK</td>\n      <td>AIRLINE</td>\n      <td>FLIGHT_NUMBER</td>\n      <td>TAIL_NUMBER</td>\n      <td>ORIGIN_AIRPORT</td>\n      <td>DESTINATION_AIRPORT</td>\n      <td>SCHEDULED_DEPARTURE</td>\n      <td>DEPARTURE_TIME</td>\n      <td>DEPARTURE_DELAY</td>\n      <td>TAXI_OUT</td>\n      <td>WHEELS_OFF</td>\n      <td>SCHEDULED_TIME</td>\n      <td>ELAPSED_TIME</td>\n      <td>AIR_TIME</td>\n      <td>DISTANCE</td>\n      <td>WHEELS_ON</td>\n      <td>TAXI_IN</td>\n      <td>SCHEDULED_ARRIVAL</td>\n      <td>ARRIVAL_TIME</td>\n      <td>ARRIVAL_DELAY</td>\n      <td>DIVERTED</td>\n      <td>CANCELLED</td>\n      <td>CANCELLATION_REASON</td>\n      <td>AIR_SYSTEM_DELAY</td>\n      <td>SECURITY_DELAY</td>\n      <td>AIRLINE_DELAY</td>\n      <td>LATE_AIRCRAFT_DELAY</td>\n      <td>WEATHER_DELAY</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>string</td>\n      <td>int</td>\n      <td>string</td>\n      <td>string</td>\n      <td>string</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>string</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n      <td>int</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 4,
      "metadata": {
        "gather": {
          "logged": 1669396212335
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.4 Display sample rows"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "flights.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 5,
          "data": {
            "text/plain": "   YEAR  MONTH  DAY  DAY_OF_WEEK AIRLINE  FLIGHT_NUMBER TAIL_NUMBER  \\\n0  2015      1    1            4      AS             98      N407AS   \n1  2015      1    1            4      AA           2336      N3KUAA   \n2  2015      1    1            4      US            840      N171US   \n3  2015      1    1            4      AA            258      N3HYAA   \n4  2015      1    1            4      AS            135      N527AS   \n5  2015      1    1            4      DL            806      N3730B   \n6  2015      1    1            4      NK            612      N635NK   \n7  2015      1    1            4      US           2013      N584UW   \n8  2015      1    1            4      AA           1112      N3LAAA   \n9  2015      1    1            4      DL           1173      N826DN   \n\n  ORIGIN_AIRPORT DESTINATION_AIRPORT  SCHEDULED_DEPARTURE  DEPARTURE_TIME  \\\n0            ANC                 SEA                    5            2354   \n1            LAX                 PBI                   10               2   \n2            SFO                 CLT                   20              18   \n3            LAX                 MIA                   20              15   \n4            SEA                 ANC                   25              24   \n5            SFO                 MSP                   25              20   \n6            LAS                 MSP                   25              19   \n7            LAX                 CLT                   30              44   \n8            SFO                 DFW                   30              19   \n9            LAS                 ATL                   30              33   \n\n   DEPARTURE_DELAY  TAXI_OUT  WHEELS_OFF  SCHEDULED_TIME  ELAPSED_TIME  \\\n0              -11        21          15             205           194   \n1               -8        12          14             280           279   \n2               -2        16          34             286           293   \n3               -5        15          30             285           281   \n4               -1        11          35             235           215   \n5               -5        18          38             217           230   \n6               -6        11          30             181           170   \n7               14        13          57             273           249   \n8              -11        17          36             195           193   \n9                3        12          45             221           203   \n\n   AIR_TIME  DISTANCE  WHEELS_ON  TAXI_IN  SCHEDULED_ARRIVAL  ARRIVAL_TIME  \\\n0       169      1448        404        4                430           408   \n1       263      2330        737        4                750           741   \n2       266      2296        800       11                806           811   \n3       258      2342        748        8                805           756   \n4       199      1448        254        5                320           259   \n5       206      1589        604        6                602           610   \n6       154      1299        504        5                526           509   \n7       228      2125        745        8                803           753   \n8       173      1464        529        3                545           532   \n9       186      1747        651        5                711           656   \n\n   ARRIVAL_DELAY  DIVERTED  CANCELLED CANCELLATION_REASON  AIR_SYSTEM_DELAY  \\\n0            -22         0          0                None               NaN   \n1             -9         0          0                None               NaN   \n2              5         0          0                None               NaN   \n3             -9         0          0                None               NaN   \n4            -21         0          0                None               NaN   \n5              8         0          0                None               NaN   \n6            -17         0          0                None               NaN   \n7            -10         0          0                None               NaN   \n8            -13         0          0                None               NaN   \n9            -15         0          0                None               NaN   \n\n   SECURITY_DELAY  AIRLINE_DELAY  LATE_AIRCRAFT_DELAY  WEATHER_DELAY  \n0             NaN            NaN                  NaN            NaN  \n1             NaN            NaN                  NaN            NaN  \n2             NaN            NaN                  NaN            NaN  \n3             NaN            NaN                  NaN            NaN  \n4             NaN            NaN                  NaN            NaN  \n5             NaN            NaN                  NaN            NaN  \n6             NaN            NaN                  NaN            NaN  \n7             NaN            NaN                  NaN            NaN  \n8             NaN            NaN                  NaN            NaN  \n9             NaN            NaN                  NaN            NaN  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>YEAR</th>\n      <th>MONTH</th>\n      <th>DAY</th>\n      <th>DAY_OF_WEEK</th>\n      <th>AIRLINE</th>\n      <th>FLIGHT_NUMBER</th>\n      <th>TAIL_NUMBER</th>\n      <th>ORIGIN_AIRPORT</th>\n      <th>DESTINATION_AIRPORT</th>\n      <th>SCHEDULED_DEPARTURE</th>\n      <th>DEPARTURE_TIME</th>\n      <th>DEPARTURE_DELAY</th>\n      <th>TAXI_OUT</th>\n      <th>WHEELS_OFF</th>\n      <th>SCHEDULED_TIME</th>\n      <th>ELAPSED_TIME</th>\n      <th>AIR_TIME</th>\n      <th>DISTANCE</th>\n      <th>WHEELS_ON</th>\n      <th>TAXI_IN</th>\n      <th>SCHEDULED_ARRIVAL</th>\n      <th>ARRIVAL_TIME</th>\n      <th>ARRIVAL_DELAY</th>\n      <th>DIVERTED</th>\n      <th>CANCELLED</th>\n      <th>CANCELLATION_REASON</th>\n      <th>AIR_SYSTEM_DELAY</th>\n      <th>SECURITY_DELAY</th>\n      <th>AIRLINE_DELAY</th>\n      <th>LATE_AIRCRAFT_DELAY</th>\n      <th>WEATHER_DELAY</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AS</td>\n      <td>98</td>\n      <td>N407AS</td>\n      <td>ANC</td>\n      <td>SEA</td>\n      <td>5</td>\n      <td>2354</td>\n      <td>-11</td>\n      <td>21</td>\n      <td>15</td>\n      <td>205</td>\n      <td>194</td>\n      <td>169</td>\n      <td>1448</td>\n      <td>404</td>\n      <td>4</td>\n      <td>430</td>\n      <td>408</td>\n      <td>-22</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>2336</td>\n      <td>N3KUAA</td>\n      <td>LAX</td>\n      <td>PBI</td>\n      <td>10</td>\n      <td>2</td>\n      <td>-8</td>\n      <td>12</td>\n      <td>14</td>\n      <td>280</td>\n      <td>279</td>\n      <td>263</td>\n      <td>2330</td>\n      <td>737</td>\n      <td>4</td>\n      <td>750</td>\n      <td>741</td>\n      <td>-9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>US</td>\n      <td>840</td>\n      <td>N171US</td>\n      <td>SFO</td>\n      <td>CLT</td>\n      <td>20</td>\n      <td>18</td>\n      <td>-2</td>\n      <td>16</td>\n      <td>34</td>\n      <td>286</td>\n      <td>293</td>\n      <td>266</td>\n      <td>2296</td>\n      <td>800</td>\n      <td>11</td>\n      <td>806</td>\n      <td>811</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>258</td>\n      <td>N3HYAA</td>\n      <td>LAX</td>\n      <td>MIA</td>\n      <td>20</td>\n      <td>15</td>\n      <td>-5</td>\n      <td>15</td>\n      <td>30</td>\n      <td>285</td>\n      <td>281</td>\n      <td>258</td>\n      <td>2342</td>\n      <td>748</td>\n      <td>8</td>\n      <td>805</td>\n      <td>756</td>\n      <td>-9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AS</td>\n      <td>135</td>\n      <td>N527AS</td>\n      <td>SEA</td>\n      <td>ANC</td>\n      <td>25</td>\n      <td>24</td>\n      <td>-1</td>\n      <td>11</td>\n      <td>35</td>\n      <td>235</td>\n      <td>215</td>\n      <td>199</td>\n      <td>1448</td>\n      <td>254</td>\n      <td>5</td>\n      <td>320</td>\n      <td>259</td>\n      <td>-21</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>DL</td>\n      <td>806</td>\n      <td>N3730B</td>\n      <td>SFO</td>\n      <td>MSP</td>\n      <td>25</td>\n      <td>20</td>\n      <td>-5</td>\n      <td>18</td>\n      <td>38</td>\n      <td>217</td>\n      <td>230</td>\n      <td>206</td>\n      <td>1589</td>\n      <td>604</td>\n      <td>6</td>\n      <td>602</td>\n      <td>610</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>NK</td>\n      <td>612</td>\n      <td>N635NK</td>\n      <td>LAS</td>\n      <td>MSP</td>\n      <td>25</td>\n      <td>19</td>\n      <td>-6</td>\n      <td>11</td>\n      <td>30</td>\n      <td>181</td>\n      <td>170</td>\n      <td>154</td>\n      <td>1299</td>\n      <td>504</td>\n      <td>5</td>\n      <td>526</td>\n      <td>509</td>\n      <td>-17</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>US</td>\n      <td>2013</td>\n      <td>N584UW</td>\n      <td>LAX</td>\n      <td>CLT</td>\n      <td>30</td>\n      <td>44</td>\n      <td>14</td>\n      <td>13</td>\n      <td>57</td>\n      <td>273</td>\n      <td>249</td>\n      <td>228</td>\n      <td>2125</td>\n      <td>745</td>\n      <td>8</td>\n      <td>803</td>\n      <td>753</td>\n      <td>-10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>1112</td>\n      <td>N3LAAA</td>\n      <td>SFO</td>\n      <td>DFW</td>\n      <td>30</td>\n      <td>19</td>\n      <td>-11</td>\n      <td>17</td>\n      <td>36</td>\n      <td>195</td>\n      <td>193</td>\n      <td>173</td>\n      <td>1464</td>\n      <td>529</td>\n      <td>3</td>\n      <td>545</td>\n      <td>532</td>\n      <td>-13</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>DL</td>\n      <td>1173</td>\n      <td>N826DN</td>\n      <td>LAS</td>\n      <td>ATL</td>\n      <td>30</td>\n      <td>33</td>\n      <td>3</td>\n      <td>12</td>\n      <td>45</td>\n      <td>221</td>\n      <td>203</td>\n      <td>186</td>\n      <td>1747</td>\n      <td>651</td>\n      <td>5</td>\n      <td>711</td>\n      <td>656</td>\n      <td>-15</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 5,
      "metadata": {
        "gather": {
          "logged": 1669396217065
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Each entry of the flights.csv file corresponds to a flight and we see that more than 5'800'000 flights have been recorded in 2015. These flights are described according to 31 variables. A description of these variables can be found [here](https://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time). Below is a brief recall of the meaning of the variables that will be used in this notebook:\n",
        "\n",
        "**YEAR, MONTH, DAY, DAY_OF_WEEK**: dates of the flight  \n",
        "**AIRLINE**: An identification number assigned by US DOT to identify a unique airline  \n",
        "**ORIGIN_AIRPORT** and **DESTINATION_AIRPORT**: code attributed by IATA to identify the airports  \n",
        "**SCHEDULED_DEPARTURE** and **SCHEDULED_ARRIVAL**: scheduled times of take-off and landing  \n",
        "**DEPARTURE_TIME** and **ARRIVAL_TIME**: real times at which take-off and landing took place  \n",
        "**DEPARTURE_DELAY** and **ARRIVAL_DELAY**: difference (in minutes) between planned and real times  \n",
        "**DISTANCE**: distance (in miles)  "
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.5 How airline impacts delays - Mean delays at arrival for each airline"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "As a first step, we consider all the flights from all carriers in January 2015. \n",
        "\n",
        "Here, the aim is to analyse the airlines with respect to their punctuality at arrival and for that purpose, we compute a few basic statisticial parameters:"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "flights.createOrReplaceTempView(\"flights\")\n",
        "\n",
        "airline_delays = spark.sql( \\\n",
        "    \"SELECT AIRLINE, MIN(ARRIVAL_DELAY) as min, MAX(ARRIVAL_DELAY) as max, AVG(ARRIVAL_DELAY) as avg, count(*) as count \\\n",
        "    from flights WHERE MONTH == 1 AND ARRIVAL_DELAY is not null \\\n",
        "    group by AIRLINE order by count\")\n",
        "\n",
        "airline_delays.toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 6,
          "data": {
            "text/plain": "   AIRLINE  min   max        avg  count\n0       VX  -70   384   1.420702   4647\n1       HA  -52  1013   3.512640   6408\n2       F9  -47   686  18.357238   6735\n3       NK  -59   570  11.398054   8632\n4       AS  -82   451  -0.320888  13151\n5       B6  -76   502   7.347281  20482\n6       MQ  -60   788  18.164974  27568\n7       US  -67   621   3.107457  32478\n8       UA  -69   863   6.352729  37363\n9       AA  -69  1971   6.955843  43074\n10      OO  -57   916  10.889894  46655\n11      EV  -60   723   8.537497  48084\n12      DL  -72  1174  -2.043847  63676\n13      WN  -63   593   3.389466  98060",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AIRLINE</th>\n      <th>min</th>\n      <th>max</th>\n      <th>avg</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>VX</td>\n      <td>-70</td>\n      <td>384</td>\n      <td>1.420702</td>\n      <td>4647</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>HA</td>\n      <td>-52</td>\n      <td>1013</td>\n      <td>3.512640</td>\n      <td>6408</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>F9</td>\n      <td>-47</td>\n      <td>686</td>\n      <td>18.357238</td>\n      <td>6735</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NK</td>\n      <td>-59</td>\n      <td>570</td>\n      <td>11.398054</td>\n      <td>8632</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AS</td>\n      <td>-82</td>\n      <td>451</td>\n      <td>-0.320888</td>\n      <td>13151</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>B6</td>\n      <td>-76</td>\n      <td>502</td>\n      <td>7.347281</td>\n      <td>20482</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>MQ</td>\n      <td>-60</td>\n      <td>788</td>\n      <td>18.164974</td>\n      <td>27568</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>US</td>\n      <td>-67</td>\n      <td>621</td>\n      <td>3.107457</td>\n      <td>32478</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>UA</td>\n      <td>-69</td>\n      <td>863</td>\n      <td>6.352729</td>\n      <td>37363</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>AA</td>\n      <td>-69</td>\n      <td>1971</td>\n      <td>6.955843</td>\n      <td>43074</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>OO</td>\n      <td>-57</td>\n      <td>916</td>\n      <td>10.889894</td>\n      <td>46655</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>EV</td>\n      <td>-60</td>\n      <td>723</td>\n      <td>8.537497</td>\n      <td>48084</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>DL</td>\n      <td>-72</td>\n      <td>1174</td>\n      <td>-2.043847</td>\n      <td>63676</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>WN</td>\n      <td>-63</td>\n      <td>593</td>\n      <td>3.389466</td>\n      <td>98060</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 6,
      "metadata": {
        "gather": {
          "logged": 1669396234209
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.6 Flight & Mean Flight Delay distribution per Airline"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, we want to visualize the results in graphs"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "fm = mpl.font_manager._rebuild()\n",
        "\n",
        "airlines_names = spark.read.option(\"inferschema\", \"true\").csv(\"airlines.csv\", header=True).toPandas()\n",
        "abbr_companies = airlines_names.set_index('IATA_CODE')['AIRLINE'].to_dict()\n",
        "global_stats = airline_delays.toPandas()\n",
        "font = {'family' : 'normal', 'weight' : 'bold', 'size'   : 15}\n",
        "mpl.rc('font', **font)\n",
        "import matplotlib.patches as mpatches\n",
        "#__________________________________________________________________\n",
        "colors = ['royalblue', 'grey', 'wheat', 'c', 'firebrick', 'seagreen', 'lightskyblue',\n",
        "          'lightcoral', 'yellowgreen', 'gold', 'tomato', 'violet', 'aquamarine', 'chartreuse']\n",
        "#___________________________________\n",
        "fig = plt.figure(1, figsize=(16,15))\n",
        "gs=GridSpec(2,2)             \n",
        "ax1=fig.add_subplot(gs[0,0]) \n",
        "ax2=fig.add_subplot(gs[0,1])  \n",
        "#------------------------------\n",
        "# Pie chart nº1: nb of flights\n",
        "#------------------------------\n",
        "labels = [s for s in  global_stats.index]\n",
        "sizes  = global_stats['count'].values\n",
        "explode = [0.3 if sizes[i] < 20000 else 0.0 for i in range(len(abbr_companies))]\n",
        "patches, texts, autotexts = ax1.pie(sizes, explode = explode,\n",
        "                                labels=labels, colors = colors,  autopct='%1.0f%%',\n",
        "                                shadow=False, startangle=0)\n",
        "for i in range(len(abbr_companies)): \n",
        "    texts[i].set_fontsize(14)\n",
        "ax1.axis('equal')\n",
        "ax1.set_title('% of flights per company', bbox={'facecolor':'midnightblue', 'pad':5},\n",
        "              color = 'w',fontsize=18)\n",
        "#_______________________________________________\n",
        "# I set the legend: abreviation -> airline name\n",
        "comp_handler = []\n",
        "i = 0\n",
        "for company in abbr_companies:\n",
        "    comp_handler.append(mpatches.Patch(color=colors[i],\n",
        "            label = abbr_companies[company]))\n",
        "    i = i + 1\n",
        "ax1.legend(handles=comp_handler, bbox_to_anchor=(0.2, 0.9), \n",
        "           fontsize = 13, bbox_transform=plt.gcf().transFigure)\n",
        "#----------------------------------------\n",
        "# Pie chart nº2: mean delay at arrival\n",
        "#----------------------------------------\n",
        "sizes  = global_stats['avg'].values\n",
        "sizes  = [max(s,0) for s in sizes]\n",
        "explode = [0.0 if sizes[i] < 20000 else 0.01 for i in range(len(abbr_companies))]\n",
        "patches, texts, autotexts = ax2.pie(sizes, explode = explode, labels = labels,\n",
        "                                colors = colors, shadow=False, startangle=0,\n",
        "                                autopct = lambda p :  '{:.0f}'.format(p * sum(sizes) / 100))\n",
        "for i in range(len(abbr_companies)): \n",
        "    texts[i].set_fontsize(14)\n",
        "ax2.axis('equal')\n",
        "ax2.set_title('Mean delay at arrival', bbox={'facecolor':'midnightblue', 'pad':5},\n",
        "              color='w', fontsize=18)\n",
        "#________________________\n",
        "plt.tight_layout(w_pad=3) "
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "findfont: Font family ['normal'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['normal'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['normal'] not found. Falling back to DejaVu Sans.\nfindfont: Font family ['normal'] not found. Falling back to DejaVu Sans.\n"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1600x1500 with 2 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "execution_count": 7,
      "metadata": {
        "gather": {
          "logged": 1669396241298
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Considering the first pie chart that gives the percentage of flights per airline, we see that there is some disparity between the carriers.  For exemple, Southwest Airlines accounts for  ∼ 20% of the flights which is similar to the number of flights chartered by the 7 tiniest airlines. \n",
        "\n",
        "However, if we have a look at the second pie chart, we see on the contrary, the differences among airlines are less pronounced. They all have less than 12 minutes of delays at arrival, if we exclude Frontier Airlines and American Eagle Airlines that report high mean delays."
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.7. How airport impacts delays - Mean delays at arrival for each airport for Southwest airline"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "As a second step, we analyse the variations of the delays with respect to the destination airport for a given airline, here we choose Southwest airline in January 2015. "
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "airline = \"'WN'\" # South West\n",
        "\n",
        "airports_delays = spark.sql( \\\n",
        " \"SELECT DESTINATION_AIRPORT, MIN(ARRIVAL_DELAY) as min, MAX(ARRIVAL_DELAY) as max, AVG(ARRIVAL_DELAY) as avg, count(*) as count \\\n",
        "  from flights WHERE MONTH == 1 AND AIRLINE == \" + airline + \" AND ARRIVAL_DELAY is not null \\\n",
        "  group by DESTINATION_AIRPORT order by DESTINATION_AIRPORT\")\n",
        "\n",
        "airports_delays.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 8,
          "data": {
            "text/plain": "  DESTINATION_AIRPORT  min  max       avg  count\n0                 ABQ  -43  307  6.427521    952\n1                 ALB  -30  193  5.743976    332\n2                 AMA  -24  110  3.400000    145\n3                 ATL  -49  398  2.144726   3593\n4                 AUS  -53  340  5.377151   1453\n5                 BDL  -28  293  7.335260    519\n6                 BHM  -33  162  6.532828    396\n7                 BNA  -44  333  3.827078   2238\n8                 BOI  -33  187  7.151852    270\n9                 BOS  -33  264  7.955022    667",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DESTINATION_AIRPORT</th>\n      <th>min</th>\n      <th>max</th>\n      <th>avg</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ABQ</td>\n      <td>-43</td>\n      <td>307</td>\n      <td>6.427521</td>\n      <td>952</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ALB</td>\n      <td>-30</td>\n      <td>193</td>\n      <td>5.743976</td>\n      <td>332</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AMA</td>\n      <td>-24</td>\n      <td>110</td>\n      <td>3.400000</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ATL</td>\n      <td>-49</td>\n      <td>398</td>\n      <td>2.144726</td>\n      <td>3593</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>AUS</td>\n      <td>-53</td>\n      <td>340</td>\n      <td>5.377151</td>\n      <td>1453</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>BDL</td>\n      <td>-28</td>\n      <td>293</td>\n      <td>7.335260</td>\n      <td>519</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>BHM</td>\n      <td>-33</td>\n      <td>162</td>\n      <td>6.532828</td>\n      <td>396</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>BNA</td>\n      <td>-44</td>\n      <td>333</td>\n      <td>3.827078</td>\n      <td>2238</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>BOI</td>\n      <td>-33</td>\n      <td>187</td>\n      <td>7.151852</td>\n      <td>270</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>BOS</td>\n      <td>-33</td>\n      <td>264</td>\n      <td>7.955022</td>\n      <td>667</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 8,
      "metadata": {
        "gather": {
          "logged": 1669396261761
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 2 Model training: Single airport LAX, Single airline WN"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "The previsous sections dealt with an exploration of the dataset.  \n",
        "From here, we start with the modeling of flight delays. \n",
        "\n",
        "**Motivations**\n",
        "\n",
        "There is a high variability in average delays, both between the different airports but also between the different airlines. So, it is necessary to learn model that is specific to an airline the destination airport.\n",
        "\n",
        "We will learn model that predicts the flight delays at the destination airport at a given time of arrival (on January). We will work on Southwest Airlines (WN) flights arriving at the airport of Los Angeles International Airport (LAX). We will use the 3 first weeks of January as the training set and the follwoing week of January as the test set."
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.1 Data preparation"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.1.1 Feature engineering"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "def format_date(year, month, day, scheduled):\n",
        "    if scheduled == 2400: \n",
        "        scheduled = 0\n",
        "    scheduled = \"{0:04d}\".format(int(scheduled))\n",
        "    return datetime.datetime(year, month, day, int(scheduled[0:2]), int(scheduled[2:4])).strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "\n",
        "def format_hour(scheduled):\n",
        "    if scheduled == 2400: \n",
        "        scheduled = 0\n",
        "    scheduled = \"{0:04d}\".format(int(scheduled))\n",
        "    return int(scheduled[0:2])\n",
        "    \n",
        "def format_seconds(scheduled):\n",
        "    if scheduled == 2400: \n",
        "        scheduled = 0\n",
        "    scheduled = \"{0:04d}\".format(int(scheduled))\n",
        "    return (3600 * int(scheduled[0:2])) + (60 * int(scheduled[2:4]))\n",
        "\n",
        "udf_format_date = F.udf(format_date, StringType())\n",
        "udf_format_hour = F.udf(format_hour, IntegerType())\n",
        "udf_format_seconds = F.udf(format_seconds, IntegerType())\n",
        "flights = flights \\\n",
        "  .withColumn('SCHEDULED_DEPARTURE_FORMATTED',udf_format_date(flights.YEAR, flights.MONTH, flights.DAY, flights.SCHEDULED_DEPARTURE)) \\\n",
        "  .withColumn('SCHEDULED_ARRIVAL_FORMATTED',udf_format_date(flights.YEAR, flights.MONTH, flights.DAY, flights.SCHEDULED_ARRIVAL)) \\\n",
        "  .withColumn('SCHEDULED_ARRIVAL_hour',udf_format_hour(flights.SCHEDULED_ARRIVAL)) \\\n",
        "  .withColumn('SCHEDULED_ARRIVAL_sec',udf_format_seconds(flights.SCHEDULED_ARRIVAL))\n",
        "\n",
        "flights.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "\r[Stage 23:>                                                         (0 + 1) / 1]\r\r                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 9,
          "data": {
            "text/plain": "   YEAR  MONTH  DAY  DAY_OF_WEEK AIRLINE  FLIGHT_NUMBER TAIL_NUMBER  \\\n0  2015      1    1            4      AS             98      N407AS   \n1  2015      1    1            4      AA           2336      N3KUAA   \n2  2015      1    1            4      US            840      N171US   \n3  2015      1    1            4      AA            258      N3HYAA   \n4  2015      1    1            4      AS            135      N527AS   \n5  2015      1    1            4      DL            806      N3730B   \n6  2015      1    1            4      NK            612      N635NK   \n7  2015      1    1            4      US           2013      N584UW   \n8  2015      1    1            4      AA           1112      N3LAAA   \n9  2015      1    1            4      DL           1173      N826DN   \n\n  ORIGIN_AIRPORT DESTINATION_AIRPORT  SCHEDULED_DEPARTURE  DEPARTURE_TIME  \\\n0            ANC                 SEA                    5            2354   \n1            LAX                 PBI                   10               2   \n2            SFO                 CLT                   20              18   \n3            LAX                 MIA                   20              15   \n4            SEA                 ANC                   25              24   \n5            SFO                 MSP                   25              20   \n6            LAS                 MSP                   25              19   \n7            LAX                 CLT                   30              44   \n8            SFO                 DFW                   30              19   \n9            LAS                 ATL                   30              33   \n\n   DEPARTURE_DELAY  TAXI_OUT  WHEELS_OFF  SCHEDULED_TIME  ELAPSED_TIME  \\\n0              -11        21          15             205           194   \n1               -8        12          14             280           279   \n2               -2        16          34             286           293   \n3               -5        15          30             285           281   \n4               -1        11          35             235           215   \n5               -5        18          38             217           230   \n6               -6        11          30             181           170   \n7               14        13          57             273           249   \n8              -11        17          36             195           193   \n9                3        12          45             221           203   \n\n   AIR_TIME  DISTANCE  WHEELS_ON  TAXI_IN  SCHEDULED_ARRIVAL  ARRIVAL_TIME  \\\n0       169      1448        404        4                430           408   \n1       263      2330        737        4                750           741   \n2       266      2296        800       11                806           811   \n3       258      2342        748        8                805           756   \n4       199      1448        254        5                320           259   \n5       206      1589        604        6                602           610   \n6       154      1299        504        5                526           509   \n7       228      2125        745        8                803           753   \n8       173      1464        529        3                545           532   \n9       186      1747        651        5                711           656   \n\n   ARRIVAL_DELAY  DIVERTED  CANCELLED CANCELLATION_REASON  AIR_SYSTEM_DELAY  \\\n0            -22         0          0                None               NaN   \n1             -9         0          0                None               NaN   \n2              5         0          0                None               NaN   \n3             -9         0          0                None               NaN   \n4            -21         0          0                None               NaN   \n5              8         0          0                None               NaN   \n6            -17         0          0                None               NaN   \n7            -10         0          0                None               NaN   \n8            -13         0          0                None               NaN   \n9            -15         0          0                None               NaN   \n\n   SECURITY_DELAY  AIRLINE_DELAY  LATE_AIRCRAFT_DELAY  WEATHER_DELAY  \\\n0             NaN            NaN                  NaN            NaN   \n1             NaN            NaN                  NaN            NaN   \n2             NaN            NaN                  NaN            NaN   \n3             NaN            NaN                  NaN            NaN   \n4             NaN            NaN                  NaN            NaN   \n5             NaN            NaN                  NaN            NaN   \n6             NaN            NaN                  NaN            NaN   \n7             NaN            NaN                  NaN            NaN   \n8             NaN            NaN                  NaN            NaN   \n9             NaN            NaN                  NaN            NaN   \n\n  SCHEDULED_DEPARTURE_FORMATTED SCHEDULED_ARRIVAL_FORMATTED  \\\n0           2015-01-01 00:05:00         2015-01-01 04:30:00   \n1           2015-01-01 00:10:00         2015-01-01 07:50:00   \n2           2015-01-01 00:20:00         2015-01-01 08:06:00   \n3           2015-01-01 00:20:00         2015-01-01 08:05:00   \n4           2015-01-01 00:25:00         2015-01-01 03:20:00   \n5           2015-01-01 00:25:00         2015-01-01 06:02:00   \n6           2015-01-01 00:25:00         2015-01-01 05:26:00   \n7           2015-01-01 00:30:00         2015-01-01 08:03:00   \n8           2015-01-01 00:30:00         2015-01-01 05:45:00   \n9           2015-01-01 00:30:00         2015-01-01 07:11:00   \n\n   SCHEDULED_ARRIVAL_hour  SCHEDULED_ARRIVAL_sec  \n0                       4                  16200  \n1                       7                  28200  \n2                       8                  29160  \n3                       8                  29100  \n4                       3                  12000  \n5                       6                  21720  \n6                       5                  19560  \n7                       8                  28980  \n8                       5                  20700  \n9                       7                  25860  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>YEAR</th>\n      <th>MONTH</th>\n      <th>DAY</th>\n      <th>DAY_OF_WEEK</th>\n      <th>AIRLINE</th>\n      <th>FLIGHT_NUMBER</th>\n      <th>TAIL_NUMBER</th>\n      <th>ORIGIN_AIRPORT</th>\n      <th>DESTINATION_AIRPORT</th>\n      <th>SCHEDULED_DEPARTURE</th>\n      <th>DEPARTURE_TIME</th>\n      <th>DEPARTURE_DELAY</th>\n      <th>TAXI_OUT</th>\n      <th>WHEELS_OFF</th>\n      <th>SCHEDULED_TIME</th>\n      <th>ELAPSED_TIME</th>\n      <th>AIR_TIME</th>\n      <th>DISTANCE</th>\n      <th>WHEELS_ON</th>\n      <th>TAXI_IN</th>\n      <th>SCHEDULED_ARRIVAL</th>\n      <th>ARRIVAL_TIME</th>\n      <th>ARRIVAL_DELAY</th>\n      <th>DIVERTED</th>\n      <th>CANCELLED</th>\n      <th>CANCELLATION_REASON</th>\n      <th>AIR_SYSTEM_DELAY</th>\n      <th>SECURITY_DELAY</th>\n      <th>AIRLINE_DELAY</th>\n      <th>LATE_AIRCRAFT_DELAY</th>\n      <th>WEATHER_DELAY</th>\n      <th>SCHEDULED_DEPARTURE_FORMATTED</th>\n      <th>SCHEDULED_ARRIVAL_FORMATTED</th>\n      <th>SCHEDULED_ARRIVAL_hour</th>\n      <th>SCHEDULED_ARRIVAL_sec</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AS</td>\n      <td>98</td>\n      <td>N407AS</td>\n      <td>ANC</td>\n      <td>SEA</td>\n      <td>5</td>\n      <td>2354</td>\n      <td>-11</td>\n      <td>21</td>\n      <td>15</td>\n      <td>205</td>\n      <td>194</td>\n      <td>169</td>\n      <td>1448</td>\n      <td>404</td>\n      <td>4</td>\n      <td>430</td>\n      <td>408</td>\n      <td>-22</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:05:00</td>\n      <td>2015-01-01 04:30:00</td>\n      <td>4</td>\n      <td>16200</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>2336</td>\n      <td>N3KUAA</td>\n      <td>LAX</td>\n      <td>PBI</td>\n      <td>10</td>\n      <td>2</td>\n      <td>-8</td>\n      <td>12</td>\n      <td>14</td>\n      <td>280</td>\n      <td>279</td>\n      <td>263</td>\n      <td>2330</td>\n      <td>737</td>\n      <td>4</td>\n      <td>750</td>\n      <td>741</td>\n      <td>-9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:10:00</td>\n      <td>2015-01-01 07:50:00</td>\n      <td>7</td>\n      <td>28200</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>US</td>\n      <td>840</td>\n      <td>N171US</td>\n      <td>SFO</td>\n      <td>CLT</td>\n      <td>20</td>\n      <td>18</td>\n      <td>-2</td>\n      <td>16</td>\n      <td>34</td>\n      <td>286</td>\n      <td>293</td>\n      <td>266</td>\n      <td>2296</td>\n      <td>800</td>\n      <td>11</td>\n      <td>806</td>\n      <td>811</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:20:00</td>\n      <td>2015-01-01 08:06:00</td>\n      <td>8</td>\n      <td>29160</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>258</td>\n      <td>N3HYAA</td>\n      <td>LAX</td>\n      <td>MIA</td>\n      <td>20</td>\n      <td>15</td>\n      <td>-5</td>\n      <td>15</td>\n      <td>30</td>\n      <td>285</td>\n      <td>281</td>\n      <td>258</td>\n      <td>2342</td>\n      <td>748</td>\n      <td>8</td>\n      <td>805</td>\n      <td>756</td>\n      <td>-9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:20:00</td>\n      <td>2015-01-01 08:05:00</td>\n      <td>8</td>\n      <td>29100</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AS</td>\n      <td>135</td>\n      <td>N527AS</td>\n      <td>SEA</td>\n      <td>ANC</td>\n      <td>25</td>\n      <td>24</td>\n      <td>-1</td>\n      <td>11</td>\n      <td>35</td>\n      <td>235</td>\n      <td>215</td>\n      <td>199</td>\n      <td>1448</td>\n      <td>254</td>\n      <td>5</td>\n      <td>320</td>\n      <td>259</td>\n      <td>-21</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:25:00</td>\n      <td>2015-01-01 03:20:00</td>\n      <td>3</td>\n      <td>12000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>DL</td>\n      <td>806</td>\n      <td>N3730B</td>\n      <td>SFO</td>\n      <td>MSP</td>\n      <td>25</td>\n      <td>20</td>\n      <td>-5</td>\n      <td>18</td>\n      <td>38</td>\n      <td>217</td>\n      <td>230</td>\n      <td>206</td>\n      <td>1589</td>\n      <td>604</td>\n      <td>6</td>\n      <td>602</td>\n      <td>610</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:25:00</td>\n      <td>2015-01-01 06:02:00</td>\n      <td>6</td>\n      <td>21720</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>NK</td>\n      <td>612</td>\n      <td>N635NK</td>\n      <td>LAS</td>\n      <td>MSP</td>\n      <td>25</td>\n      <td>19</td>\n      <td>-6</td>\n      <td>11</td>\n      <td>30</td>\n      <td>181</td>\n      <td>170</td>\n      <td>154</td>\n      <td>1299</td>\n      <td>504</td>\n      <td>5</td>\n      <td>526</td>\n      <td>509</td>\n      <td>-17</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:25:00</td>\n      <td>2015-01-01 05:26:00</td>\n      <td>5</td>\n      <td>19560</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>US</td>\n      <td>2013</td>\n      <td>N584UW</td>\n      <td>LAX</td>\n      <td>CLT</td>\n      <td>30</td>\n      <td>44</td>\n      <td>14</td>\n      <td>13</td>\n      <td>57</td>\n      <td>273</td>\n      <td>249</td>\n      <td>228</td>\n      <td>2125</td>\n      <td>745</td>\n      <td>8</td>\n      <td>803</td>\n      <td>753</td>\n      <td>-10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:30:00</td>\n      <td>2015-01-01 08:03:00</td>\n      <td>8</td>\n      <td>28980</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>AA</td>\n      <td>1112</td>\n      <td>N3LAAA</td>\n      <td>SFO</td>\n      <td>DFW</td>\n      <td>30</td>\n      <td>19</td>\n      <td>-11</td>\n      <td>17</td>\n      <td>36</td>\n      <td>195</td>\n      <td>193</td>\n      <td>173</td>\n      <td>1464</td>\n      <td>529</td>\n      <td>3</td>\n      <td>545</td>\n      <td>532</td>\n      <td>-13</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:30:00</td>\n      <td>2015-01-01 05:45:00</td>\n      <td>5</td>\n      <td>20700</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2015</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>DL</td>\n      <td>1173</td>\n      <td>N826DN</td>\n      <td>LAS</td>\n      <td>ATL</td>\n      <td>30</td>\n      <td>33</td>\n      <td>3</td>\n      <td>12</td>\n      <td>45</td>\n      <td>221</td>\n      <td>203</td>\n      <td>186</td>\n      <td>1747</td>\n      <td>651</td>\n      <td>5</td>\n      <td>711</td>\n      <td>656</td>\n      <td>-15</td>\n      <td>0</td>\n      <td>0</td>\n      <td>None</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2015-01-01 00:30:00</td>\n      <td>2015-01-01 07:11:00</td>\n      <td>7</td>\n      <td>25860</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 9,
      "metadata": {
        "gather": {
          "logged": 1669396268764
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.1.2 Feature selection - DAY_OF_WEEK, SCHEDULED_ARRIVAL_sec"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "airline = \"'WN'\"\n",
        "airport = \"'LAX'\"\n",
        "\n",
        "flights.createOrReplaceTempView(\"flights\")\n",
        "\n",
        "df_fi = spark.sql( \\\n",
        "    \"SELECT DAY_OF_WEEK, SCHEDULED_ARRIVAL_sec, DAY, ARRIVAL_DELAY as label \\\n",
        "    from flights WHERE AIRLINE == \" + airline + \" AND DESTINATION_AIRPORT == \" + airport +  \" AND ARRIVAL_DELAY is not null AND MONTH == 1\")\n",
        "\n",
        "df_fi.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 10,
          "data": {
            "text/plain": "   DAY_OF_WEEK  SCHEDULED_ARRIVAL_sec  DAY  label\n0            4                  41700    1    -10\n1            4                  37500    1    -18\n2            4                  38400    1    -18\n3            4                  37500    1    -12\n4            4                  38100    1     -8\n5            4                  39300    1      2\n6            4                  40200    1      0\n7            4                  40200    1      7\n8            4                  41100    1     -8\n9            4                  42000    1     13",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DAY_OF_WEEK</th>\n      <th>SCHEDULED_ARRIVAL_sec</th>\n      <th>DAY</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>41700</td>\n      <td>1</td>\n      <td>-10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>1</td>\n      <td>-18</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>38400</td>\n      <td>1</td>\n      <td>-18</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>1</td>\n      <td>-12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>38100</td>\n      <td>1</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4</td>\n      <td>39300</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>1</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>4</td>\n      <td>41100</td>\n      <td>1</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4</td>\n      <td>42000</td>\n      <td>1</td>\n      <td>13</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 10,
      "metadata": {
        "gather": {
          "logged": 1669396277252
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.1.3 Split data set into traning set and test set"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "df_train = df_fi.filter(F.col('DAY') < 23).drop('DAY')\n",
        "df_test = df_fi.filter(F.col('DAY') > 23).drop('DAY')\n",
        "print(\"training dataset size: \" + str(df_train.count()))\n",
        "print(\"test dataset size: \" + str(df_test.count()))\n",
        "df_train.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 11,
          "data": {
            "text/plain": "   DAY_OF_WEEK  SCHEDULED_ARRIVAL_sec  label\n0            4                  41700    -10\n1            4                  37500    -18\n2            4                  38400    -18\n3            4                  37500    -12\n4            4                  38100     -8\n5            4                  39300      2\n6            4                  40200      0\n7            4                  40200      7\n8            4                  41100     -8\n9            4                  42000     13",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DAY_OF_WEEK</th>\n      <th>SCHEDULED_ARRIVAL_sec</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>41700</td>\n      <td>-10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>-18</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>38400</td>\n      <td>-18</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>-12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>38100</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4</td>\n      <td>39300</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>4</td>\n      <td>41100</td>\n      <td>-8</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4</td>\n      <td>42000</td>\n      <td>13</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 11,
      "metadata": {
        "gather": {
          "logged": 1669396304198
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.1.4 Vectorize features"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.feature import VectorAssembler\n",
        "from pyspark.ml.linalg import Vectors\n",
        "\n",
        "assembler = VectorAssembler(\n",
        "  inputCols=[\"DAY_OF_WEEK\", \"SCHEDULED_ARRIVAL_sec\"], outputCol=\"features\"\n",
        ")\n",
        "\n",
        "X_train = assembler.transform(df_train)\n",
        "X_train.limit(10).toPandas()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 12,
          "data": {
            "text/plain": "   DAY_OF_WEEK  SCHEDULED_ARRIVAL_sec  label        features\n0            4                  41700    -10  [4.0, 41700.0]\n1            4                  37500    -18  [4.0, 37500.0]\n2            4                  38400    -18  [4.0, 38400.0]\n3            4                  37500    -12  [4.0, 37500.0]\n4            4                  38100     -8  [4.0, 38100.0]\n5            4                  39300      2  [4.0, 39300.0]\n6            4                  40200      0  [4.0, 40200.0]\n7            4                  40200      7  [4.0, 40200.0]\n8            4                  41100     -8  [4.0, 41100.0]\n9            4                  42000     13  [4.0, 42000.0]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DAY_OF_WEEK</th>\n      <th>SCHEDULED_ARRIVAL_sec</th>\n      <th>label</th>\n      <th>features</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>41700</td>\n      <td>-10</td>\n      <td>[4.0, 41700.0]</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>-18</td>\n      <td>[4.0, 37500.0]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4</td>\n      <td>38400</td>\n      <td>-18</td>\n      <td>[4.0, 38400.0]</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>37500</td>\n      <td>-12</td>\n      <td>[4.0, 37500.0]</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>38100</td>\n      <td>-8</td>\n      <td>[4.0, 38100.0]</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4</td>\n      <td>39300</td>\n      <td>2</td>\n      <td>[4.0, 39300.0]</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>0</td>\n      <td>[4.0, 40200.0]</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>40200</td>\n      <td>7</td>\n      <td>[4.0, 40200.0]</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>4</td>\n      <td>41100</td>\n      <td>-8</td>\n      <td>[4.0, 41100.0]</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4</td>\n      <td>42000</td>\n      <td>13</td>\n      <td>[4.0, 42000.0]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 12,
      "metadata": {
        "gather": {
          "logged": 1669396311736
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.2 Model training - Random Forest"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.2.1 Build, Train Model and visualize feature importances"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.regression import RandomForestRegressor\n",
        "\n",
        "rf = RandomForestRegressor(numTrees=100, featuresCol='features',labelCol='label',predictionCol='prediction')\n",
        "rfModel = rf.fit(X_train)\n",
        "\n",
        "importances = rfModel.featureImportances\n",
        "\n",
        "x_values = list(range(len(importances)))\n",
        "\n",
        "plt.bar(x_values, importances, orientation = 'vertical')\n",
        "plt.xticks(x_values, [\"DAY_OF_WEEK\", \"SCHEDULED_ARRIVAL_sec\"], rotation=40)\n",
        "plt.ylabel('Importance')\n",
        "plt.xlabel('Feature')\n",
        "plt.title('Feature Importances')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "                                                                                \r"
        },
        {
          "output_type": "execute_result",
          "execution_count": 13,
          "data": {
            "text/plain": "Text(0.5, 1.0, 'Feature Importances')"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "findfont: Font family ['normal'] not found. Falling back to DejaVu Sans.\n"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 640x480 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "execution_count": 13,
      "metadata": {
        "gather": {
          "logged": 1669396349232
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.3 Model evaluation"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.3.1 Build predictions for test set "
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "X_test = assembler.transform(df_test)\n",
        "predictions = rfModel.transform(X_test)\n",
        "predictions.select(\"prediction\", \"label\", \"features\").limit(10).toPandas()"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 2.3.3 Compute Mean Squared Error"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.evaluation import RegressionEvaluator\n",
        "\n",
        "evaluator = RegressionEvaluator(\n",
        "    labelCol=\"label\", predictionCol=\"prediction\", metricName=\"mse\")\n",
        "mse = evaluator.evaluate(predictions)\n",
        "print(\"Mean Squared Error (MSE) on test data = %g\" % mse)"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 3. Congratulations"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "You've used the Data Science Platform for an exploratory usecase where you analyse a data set and build a machine learning model to predict flight delays at arrival.\n",
        "\n",
        "**What we've covered**\n",
        "\n",
        "  ✔️ PySpark kernel\n",
        "  \n",
        "  ✔️ Data access in MaprFS Raw Data Archive using spark\n",
        "  \n",
        "  ✔️ Data preparation using SQL and spark-sql\n",
        "  \n",
        "  ✔️ Data visualization\n",
        "  \n",
        "  ✔️ Build a Random Forest model using spark-ml\n",
        "\n",
        "  ✔️ Train this random forest model using spark-ml\n",
        "\n",
        "  ✔️ Evaluate the model using spark-ml\n",
        "\n",
        "  ✔️ Save the model to MaprFS\n",
        "\n",
        "  ✔️ Load the model from MaprFS\n",
        "\n",
        "**Next steps**\n",
        "\n",
        "You have completed the beginner tutorial, you can now continue with the intermediate level notebook for computer vision with deep learning.\n",
        "\n",
        "⚠️ Don't forget to shutdown the kernel of this notebook: Click on Kernel tab in the top navigation bar→ Select Shut Down Kernel in the drop down"
      ],
      "metadata": {}
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.5",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "vscode": {
      "interpreter": {
        "hash": "6d65a8c07f5b6469e0fc613f182488c0dccce05038bbda39e5ac9075c0454d11"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 4
}